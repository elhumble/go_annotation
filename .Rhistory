shape = circle,
color = cadetblue]
D
node [fontname = Helvetica,
fontcolor = black,
shape = circle,
color = black]
34718; 34118; 29116
node [fontname = Helvetica,
fontcolor = slategrey,
shape = plaintext]
one two three four
node [fontname = Helvetica,
fontcolor = black,
shape = circle,
style = filled,
fillcolor = lightsteelblue,
color = black]
14033 12380 68 X
node [fontname = Helvetica,
fontcolor = black,
shape = circle,
style = filled,
fillcolor = lightblue,
color = black]
11350 10874 93 Y
node [fontname = Helvetica,
fontcolor = black,
shape = circle,
style = filled,
fillcolor = lavender,
color = black]
1639 1585 89 Z
node [fontname = Helvetica,
fontcolor = black,
shape = circle,
style = filled,
fillcolor = cadetblue,
color = black]
2094 2039 90 ZA
node [shape = plaintext,
fontname = Helvetica,
fontcolor = dimgrey,
fontsize = 12,
style = '']
1 Universe 3 4 shared number mapped success
# several 'edge' statements
edge [color = gainsboro, arrowhead = vee, constraint = true]
A->34718 B->34718 C->34718 D->34718 34718->34118
34118->29116 29116->{one two three four}
edge [arrowhead = none, arrowtail = none, color = black] # need to shorten length
one -> 14033  [label = ' one', fontname = Helvetica, fontcolor = slategrey]
two -> 11350 [label = ' two', fontname = Helvetica, fontcolor = slategrey]
three -> 1639 [label = ' three', fontname = Helvetica, fontcolor = slategrey]
four -> 2094 [label = ' four', fontname = Helvetica, fontcolor = slategrey]
edge [color = gainsboro, arrowhead = vee, constraint = true]
14033 -> 12380
11350 -> 10874
1639 -> 1585
2094 -> 2039
12380 -> {68 X}
10874 -> {93 Y}
1585 -> {89 Z}
2039 -> {90 ZA}
edge [arrowhead = none, arrowtail = none, color = white]
1->Universe Universe->3 3->4 4->shared shared->number number->mapped mapped->success
A [label = '@@1']
B [label = '@@2']
C [label = '@@3']
D [label = '@@4']
1 [label = '@@5']
3 [label = '@@6']
4 [label = '@@7']
}
[1]: 'Swap454 \\n 11155'
[2]: 'Newbler \\n 14538'
[3]: 'BWA \\n 18353'
[4]: 'Bowtie2 \\n 15109'
[5]: 'Raw SNPs'
[6]: 'Good flanking \\n sequences'
[7]: 'ADT score \\n > 0.8'
")
#edge [constraint = false, splines = curved, color = gainsboro]
#a -> e
#b -> e
plot(cars)
devtools::install_github("jennybc/googlesheets")
library(googlesheets)
library(lubridate)
library(dplyr)
library(ggplot2)
gs_ls()
finance <- gs_title("finances")
finance <- finance %>% gs_read()
str(finance)
finance$date <- as.Date(finance$date, "%d.%m.%Y")
finance <- mutate(finance,
month = month(as.POSIXlt(date, format="%d.%m.%Y")))
total_in <- finance %>%
filter(in_out == "in")
total_out <- finance %>%
filter(in_out == "out")
sum(total_in$amount) - sum(total_out$amount)
citation()
lm(c(4,5,6)~c(6,7,8))
mod <- lm(c(4,5,6)~c(6,7,8))
summary(mod)
biocLite("GOstats")
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("GOstats")
annotation <- readLines("../joined_transcriptome_ANNOTATED.txt")
setwd("~/Dropbox/PhD/Projects/Paper2_SNPdetection/go_annotation/map2slim")
annotation <- readLines("../joined_transcriptome_ANNOTATED.txt")
immune <- "oxidative damage"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
immune <- "oxidative repair"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
immune <- "oxidative"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
immune <- "oxidative\s\repair"
immune <- "oxidative|repair"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
immune <- "response to oxidative stress"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
immune <- "response|to|oxidative|stress"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
immune <- "(response to oxidative stress)"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
geneIDs <- c("DAF", "CTL1", "SHC")
immuneLines <- NULL
for(i in geneIDs)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
head(immuneLines)
length(strsplit(immuneLines[1], split = "\t")[[1]])
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,14:18)]
names(immuneTable) <- c("Contig_Name", "goTerm", "CC", "BP", "MF", "keywords") # 1618
head(immuneTable)
View(immuneTable)
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,8,14:18)]
names(immuneTable) <- c("Contig_Name", "geneID" "goTerm", "CC", "BP", "MF", "keywords") # 1618
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
View(immuneTable)
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
# fill table
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,10,14:18)]
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
View(immuneTable)
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name") # %>%
require(dplyr)
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name") # %>%
View(immuneSnps)
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name")  %>%
write.csv("~/Desktop/candidateSNPs.csv", row.names = F)
immune <- "(response to oxidative stress)"
immuneLines <- NULL
for(i in geneIDs)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
length(strsplit(immuneLines[1], split = "\t")[[1]])
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
# fill table
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,10,14:18)]
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name")
View(immuneSnps)
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
length(strsplit(immuneLines[1], split = "\t")[[1]])
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
# fill table
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,10,14:18)]
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name")
View(immuneSnps)
View(immuneTable)
immune <- "(regulation of oxidative stress)"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
length(strsplit(immuneLines[1], split = "\t")[[1]])
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
View(immuneTable)
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,10,14:18)]
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
View(immuneTable)
immune <- "(oxidative stress)"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
length(strsplit(immuneLines[1], split = "\t")[[1]])
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,10,14:18)]
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
View(immuneTable)
head(immuneTable)
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name")
View(immuneSnps)
immune <- "(regulation of oxidative stress)"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
length(strsplit(immuneLines[1], split = "\t")[[1]])
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
# fill table
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,10,14:18)]
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name")
immune <- "(oxidative stress)"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
length(strsplit(immuneLines[1], split = "\t")[[1]])
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
# fill table
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
immuneTable <- data.frame(immuneTable)[,c(1,10,14:18)]
# merge with snp dataframe to determine number of SNPs
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name")  %>%
write.csv("~/Desktop/oxidativestressSNPs.csv", row.names = F)
immune <- "(oxidative stress)"
immuneLines <- NULL
for(i in immune)
immuneLines <- c(immuneLines, annotation[grep(i, annotation, ignore.case=T)])
length(strsplit(immuneLines[1], split = "\t")[[1]])
immuneTable <- matrix(ncol = 18,
nrow = length(immuneLines))
# fill table
for(i in 1:length(immuneLines))
immuneTable[i,1:length(strsplit(immuneLines[i], split = "\t")[[1]])] <- strsplit(immuneLines[i], split = "\t")[[1]]
immuneTable <- data.frame(immuneTable)[,c(1,10,14:18)]
names(immuneTable) <- c("Contig_Name", "geneID", "goTerm", "CC", "BP", "MF", "keywords") # 1618
# merge with snp dataframe to determine number of SNPs
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name")  %>%
write.csv("~/Desktop/oxidativestressSNPs.csv", row.names = F)
immuneSnps <- read.csv("../../snp_filtering_pipeline/data/processed/global_snps_hq.csv", header = T)[,1:2] %>% # 34,718 snps
inner_join(immuneTable, by = "Contig_Name")
length(unique(immuneSnps$Contig_Name))
goSlim <- readLines("output/joined_transcriptome_SLIM.gaf")[-c(1:5)] # 24029 annotated contigs
head(goSlim)
length(strsplit(goSlim[1], split = "\t")[[1]])
goTable <- matrix(ncol = 16,
nrow = length(goSlim))
for(i in 1:length(goSlim)) goTable[i,1:length(strsplit(goSlim[i], split = "\t")[[1]])] <- strsplit(goSlim[i], split = "\t")[[1]]
goTable <- goTable[,c(3,5)] # retain contig and GO term
head(goTable)
goTable <- data.frame(goTable)
names(goTable) <- c("Contig_Name", "goSlimTerm")
head(goTable)
names <- read.table("goslim/goslim_generic.txt", sep = "\t", col.names = c("goSlimTerm", "name")) %>% # readr?
right_join(goTable, by = "goSlimTerm")
require(dplyr)
require(plyr)
names <- read.table("goslim/goslim_generic.txt", sep = "\t", col.names = c("goSlimTerm", "name")) %>% # readr?
right_join(goTable, by = "goSlimTerm")
head(names)
sort(names, by = "Contig_Name")
sort?
?sort
?sort
sorted_names <- names[order(Contig_Name)]
sorted_names <- names[order(names$Contig_Name)]
sorted_names <- names[with(names, order(Contig_Name)),]
head(sorted_names)
sorted_names <- names[with(names, order(-Contig_Name)),]
sorted_names <- names[order(-names[,3]),]
sorted_names <- names[ order(-names[,4], ]
sorted_names <- names[ order(-names[,4]), ]
sorted_names <- names[ order(-names[,3]), ]
sorted_names <- arrange(names, Contig_Name)
head(sorted_names)
sorted_names <- arrange(names, -Contig_Name)
sorted_names <- arrange(names, desc(Contig_Name))
head(sorted_names)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2]
head(sorted_names)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
left_join(sorted_names, names)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
left_join(sorted_names, names, by = "Contig_Name")
head(sorted_names)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
left_join(names, sorted_names, by = "Contig_Name")
head(sorted_names)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
left_join(names, sorted_names, by = "Contig_Name") %>%
write.csv("joined_transcriptome_GOslim.csv", row.names = F)
test <- aggregate(c(goSlimTerm, name)~Contig_Name, sorted_names, paste, collapse=",")
test <- aggregate(c(goSlimTerm, name)~Contig_Name, sorted_names, paste, collapse=",")
test <- aggregate(name~Contig_Name, sorted_names, paste, collapse=",")
head(sorted_names)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
left_join(names, sorted_names, by = "Contig_Name")
test <- aggregate(c(goSlimTerm, name)~Contig_Name, sorted_names, paste, collapse=",")
test <- aggregate(goSlimTerm~Contig_Name, sorted_names, paste, collapse=",")
head(test)
View(test)
library(tidyr)
test <- spread(sorted_names, Contig_Name, goSlimTerm)
head(test)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
mutate(goSlim = paste(goSlimTerm, names, sep = "/"))
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
mutate(., goSlim = paste(goSlimTerm, names, sep = "/"))
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
mutate(goSlim = paste0(goSlimTerm, names, sep = "/"))
test <-        mutate(sorted_names, goSlim = paste0(goSlimTerm, names, sep = "_"))
head(test)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
mutate(goSlim = do.call(paste, c(.[2,3], sep="-"))
)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
mutate(goSlim = unite(., paste("goSlimTerm", "names"))
)
test <- do.call(paste, c(sorted_names[c(2,3)], sep = "_"))
head(test)
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
mutate(goSlim = do.call(paste, c(sorted_names[c(2,3)], sep = "_")))
sorted_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T) %>%
.[-2] %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_")))
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_")))
head(sorted_names)
ordered_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T)[1]
head(ordered_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_"))) %>%
.[-1,2] %>%
left_join(ordered_names, by = "Contig_Name")
str(ordered_names)
str(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_"))) %>%
.[-1,2]
str(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_")))
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_"))) %>%
.[-1,2]
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_"))) %>%
.[-c(1,2)]
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name")
head(sorted_names)
head(names)
names <- read.table("goslim/goslim_generic.txt", sep = "\t", col.names = c("goSlimTerm", "name")) %>% # readr?
right_join(goTable, by = "goSlimTerm")
ordered_names <- read.table("../../snp_filtering/data/raw/transcriptlenghts.txt", header = T)[1]
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name")
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(2,3)], sep = "_")))
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name")
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name") %>%
aggregate(goSlimTerm~Contig_Name, sorted_names, paste, collapse=",")
write.csv("output/joined_transcriptome_GOslim.csv", row.names = F)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name")
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name") %>%
aggregate(goSlim~Contig_Name, sorted_names, paste, collapse=",")
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name")
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name") %>%
aggregate(goSlim~Contig_Name, paste, collapse=",")
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name") %>%
aggregate(goSlim~Contig_Name, ., paste, collapse=",")
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name") %>%
aggregate(goSlim~Contig_Name, ., paste, collapse=",")
write.csv("output/joined_transcriptome_GOslim.csv", row.names = F)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
left_join(ordered_names, by = "Contig_Name")
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)]
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
aggregate(goSlim~Contig_Name, ., paste, collapse=",") %>%
left_join(ordered_names, by = "Contig_Name")
head(sorted_names)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
aggregate(goSlim~Contig_Name, ., paste, collapse=",") %>%
right_join(ordered_names, by = "Contig_Name")
View(sorted_names)
orted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
aggregate(goSlim~Contig_Name, ., paste, collapse=",") %>%
right_join(ordered_names, by = "Contig_Name") %>%
write.csv("output/joined_transcriptome_GOslim.csv", row.names = F)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
aggregate(goSlim~Contig_Name, ., paste, collapse=",") %>%
right_join(ordered_names, by = "Contig_Name") %>%
write.csv("output/joined_transcriptome_GOslim.csv", row.names = F)
ordered_names <- read.table("../../joe_michael/summary_contig_order.txt", header = T)[1]
ordered_names <- read.table("../../joe_michael/summary_contig_order.txt", header = T)
sorted_names <- names %>%
mutate(goSlim = do.call(paste, c(names[c(1,2)], sep = "_"))) %>%
.[-c(1,2)] %>%
aggregate(goSlim~Contig_Name, ., paste, collapse=",") %>%
right_join(ordered_names, by = "Contig_Name") %>%
write.csv("output/joined_transcriptome_GOslim.csv", row.names = F)
